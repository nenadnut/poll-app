// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PollsColumns holds the columns for the "polls" table.
	PollsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "completed", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator_id", Type: field.TypeInt},
	}
	// PollsTable holds the schema information for the "polls" table.
	PollsTable = &schema.Table{
		Name:       "polls",
		Columns:    PollsColumns,
		PrimaryKey: []*schema.Column{PollsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "polls_users_polls",
				Columns:    []*schema.Column{PollsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// QuestionsColumns holds the columns for the "questions" table.
	QuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString},
		{Name: "head", Type: field.TypeBool, Default: false},
		{Name: "num_of_answers", Type: field.TypeInt, Default: 1},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "poll_id", Type: field.TypeInt},
		{Name: "question_next_question", Type: field.TypeInt, Nullable: true},
	}
	// QuestionsTable holds the schema information for the "questions" table.
	QuestionsTable = &schema.Table{
		Name:       "questions",
		Columns:    QuestionsColumns,
		PrimaryKey: []*schema.Column{QuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "questions_polls_questions",
				Columns:    []*schema.Column{QuestionsColumns[6]},
				RefColumns: []*schema.Column{PollsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "questions_questions_next_question",
				Columns:    []*schema.Column{QuestionsColumns[7]},
				RefColumns: []*schema.Column{QuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// QuestionOptionsColumns holds the columns for the "question_options" table.
	QuestionOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString},
		{Name: "chosen", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "question_id", Type: field.TypeInt},
		{Name: "question_option_next_option", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// QuestionOptionsTable holds the schema information for the "question_options" table.
	QuestionOptionsTable = &schema.Table{
		Name:       "question_options",
		Columns:    QuestionOptionsColumns,
		PrimaryKey: []*schema.Column{QuestionOptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "question_options_questions_options",
				Columns:    []*schema.Column{QuestionOptionsColumns[5]},
				RefColumns: []*schema.Column{QuestionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "question_options_question_options_next_option",
				Columns:    []*schema.Column{QuestionOptionsColumns[6]},
				RefColumns: []*schema.Column{QuestionOptionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"regular", "admin"}, Default: "regular"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PollsTable,
		QuestionsTable,
		QuestionOptionsTable,
		UsersTable,
	}
)

func init() {
	PollsTable.ForeignKeys[0].RefTable = UsersTable
	QuestionsTable.ForeignKeys[0].RefTable = PollsTable
	QuestionsTable.ForeignKeys[1].RefTable = QuestionsTable
	QuestionOptionsTable.ForeignKeys[0].RefTable = QuestionsTable
	QuestionOptionsTable.ForeignKeys[1].RefTable = QuestionOptionsTable
}
